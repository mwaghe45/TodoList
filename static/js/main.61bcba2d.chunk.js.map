{"version":3,"sources":["components/reacttodo/todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputdata","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","onSubmit","type","placeholder","value","onChange","event","target","onClick","index","item_todo_edited","find","editItem","updatedItems","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAqIeA,EAvHF,WACX,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAZP,WACnB,IAAMG,EAAQC,aAAaC,QAAQ,aAEnC,OAAIF,EACKG,KAAKC,MAAMJ,GAEX,GAM0BK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAGMC,EAAU,WACd,GAAKd,EAEE,GAAIA,GAAaY,EACtBH,EACED,EAAMO,KAAI,SAACC,GACT,OAAIA,EAAQC,KAAOP,EACV,2BAAKM,GAAZ,IAAqBE,KAAMlB,IAEtBgB,MAIXf,EAAa,IACbU,EAAc,MACdE,GAAgB,OACX,CACL,IAAMM,EAAiB,CACrBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAERS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SApBbsB,MAAM,4BAsDV,OANAC,qBAAU,WACRrB,aAAasB,QAAQ,YAAapB,KAAKqB,UAAUlB,MAChD,CAACA,IAKF,mCACE,qBAAKmB,UAAU,aAAf,SACE,sBAAKA,UAAU,YAAf,UACE,iCACE,+DAEF,qBAAKA,UAAU,WAAf,SACE,uBAAMC,SAAUd,EAAhB,UACA,uBACEe,KAAK,OACLC,YAAY,YACZH,UAAU,eACVI,MAAO/B,EACPgC,SAAU,SAACC,GAAD,OAAWhC,EAAagC,EAAMC,OAAOH,UAGhDnB,EACC,mBAAGe,UAAU,sBAAsBQ,QAASrB,IAE5C,mBAAGa,UAAU,qBAAqBQ,QAASrB,SAI/C,qBAAKa,UAAU,YAAf,SACGnB,EAAMO,KAAI,SAACC,GACV,OACE,sBAAKW,UAAU,WAAf,UACE,6BAAKX,EAAQE,OACb,sBAAKS,UAAU,WAAf,UACE,mBACEA,UAAU,sBACVQ,QAAS,kBA7DZ,SAACC,GAChB,IAAMC,EAAmB7B,EAAM8B,MAAK,SAACtB,GACnC,OAAOA,EAAQC,KAAOmB,KAExBnC,EAAaoC,EAAiBnB,MAC9BP,EAAcyB,GACdvB,GAAgB,GAuDiB0B,CAASvB,EAAQC,OAClC,mBACEU,UAAU,2BACVQ,QAAS,kBAtDV,SAACC,GAClB,IAAMI,EAAehC,EAAMiC,QAAO,SAACzB,GACjC,OAAOA,EAAQC,KAAOmB,KAExB3B,EAAS+B,GAkDwBE,CAAW1B,EAAQC,YARTD,EAAQC,SAe7C,qBAAKU,UAAU,YAAf,SACE,wBACEA,UAAU,aACV,oBAAkB,aAClBQ,QAzDM,WAChB1B,EAAS,KAqDD,SAIE,4DC5GCkC,EAVH,WACV,OAEE,mCACE,cAAC,EAAD,OCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.61bcba2d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nconst getLocalData = () => {\r\n  const lists = localStorage.getItem(\"todolists\");\r\n\r\n  if (lists) {\r\n    return JSON.parse(lists);\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst Todo = () => {\r\n  const [inputdata, setInputData] = useState(\"\");\r\n  const [items, setItems] = useState(getLocalData());\r\n  const [isEditItem, setIsEditItem] = useState(\"\");\r\n  const [toggleButton, setToggleButton] = useState(false);\r\n\r\n  \r\n  const addItem = () => {\r\n    if (!inputdata) {\r\n      alert(\"please wright something\");\r\n    } else if (inputdata && toggleButton) {\r\n      setItems(\r\n        items.map((curElem) => {\r\n          if (curElem.id === isEditItem) {\r\n            return { ...curElem, name: inputdata };\r\n          }\r\n          return curElem;\r\n        })\r\n      );\r\n\r\n      setInputData(\"\");\r\n      setIsEditItem(null);\r\n      setToggleButton(false);\r\n    } else {\r\n      const myNewInputData = {\r\n        id: new Date().getTime().toString(),\r\n        name: inputdata,\r\n      };\r\n      setItems([...items, myNewInputData]);\r\n      setInputData(\"\");\r\n    }\r\n  };\r\n\r\n\r\n  const editItem = (index) => {\r\n    const item_todo_edited = items.find((curElem) => {\r\n      return curElem.id === index;\r\n    });\r\n    setInputData(item_todo_edited.name);\r\n    setIsEditItem(index);\r\n    setToggleButton(true);\r\n  };\r\n\r\n  \r\n  const deleteItem = (index) => {\r\n    const updatedItems = items.filter((curElem) => {\r\n      return curElem.id !== index;\r\n    });\r\n    setItems(updatedItems);\r\n  };\r\n\r\n  \r\n  const removeAll = () => {\r\n    setItems([]);\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    localStorage.setItem(\"todolists\", JSON.stringify(items));\r\n  }, [items]);\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n      <div className=\"parent-div\">\r\n        <div className=\"child-div\">\r\n          <figure>\r\n            <figcaption>Add Your List Here </figcaption>\r\n          </figure>\r\n          <div className=\"addItems\">\r\n            <form onSubmit={addItem}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\" Add Item\"\r\n              className=\"form-control\"\r\n              value={inputdata}\r\n              onChange={(event) => setInputData(event.target.value)}\r\n    \r\n            />\r\n            {toggleButton ? (\r\n              <i className=\"far fa-edit add-btn\" onClick={addItem}></i>\r\n            ) : (\r\n              <i className=\"fa fa-plus add-btn\" onClick={addItem}></i>\r\n            )}\r\n            </form>\r\n          </div>\r\n          <div className=\"showItems\">\r\n            {items.map((curElem) => {\r\n              return (\r\n                <div className=\"eachItem\" key={curElem.id}>\r\n                  <h3>{curElem.name}</h3>\r\n                  <div className=\"todo-btn\">\r\n                    <i\r\n                      className=\"far fa-edit add-btn\"\r\n                      onClick={() => editItem(curElem.id)}></i>\r\n                    <i\r\n                      className=\"far fa-trash-alt add-btn\"\r\n                      onClick={() => deleteItem(curElem.id)}></i>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div className=\"showItems\">\r\n            <button\r\n              className=\"btn effect\"\r\n              data-sm-link-text=\"Remove All\"\r\n              onClick={removeAll}>\r\n              <span> REMOVE LIST</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;","//import logo from './logo.svg';\n//import './App.css';\nimport React from \"react\";\nimport Todo from \"./components/reacttodo/todo\";\n\n\nconst App = () => {\n  return (\n  \n    <>\n      <Todo />\n    </>\n  );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}